---
- name: Test Mesh WebSocket access
  hosts: all
  gather_facts: true  # we need ansible_hostname info

  vars:
    mesh_ingress_0_url: "wss://mesh-ingress-0.cus-jemarmolm.aws.ansiblecloud.com"
    mesh_ingress_1_url: "wss://mesh-ingress-1.cus-jemarmolm.aws.ansiblecloud.com"
    cert_path: "/etc/receptor/tls/{{ ansible_hostname }}.ec2.internal.crt"
    key_path: "/etc/receptor/tls/{{ ansible_hostname }}.ec2.internal.key"
    ca_path: "/etc/receptor/tls/automation-controller-root-ca.crt"
    json_payload: "{\"action\": \"helloWorld\"}"

    # test command
    wscat_command: >
      sudo $(which wscat)
      -c {{ item }}
      --cert {{ cert_path }}
      --key {{ key_path }}
      --ca {{ ca_path }}
      --no-check
      -w 1
      -x '{{ json_payload }}'

  tasks:
    - name: pre-checks
      block:
        - name: Set default localhost entries in /etc/hosts
          copy:
            dest: /etc/hosts
            content: |
              127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
              ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
            owner: root
            group: root
            mode: '0644'
          become: true

    - name: Check if Node.js is installed
      command: node -v
      register: node_check
      ignore_errors: true

    - name: Install Node.js if not installed
      dnf:
        name: nodejs
        state: present
      when: node_check.failed

    - name: Install wscat using npm locally if not installed
      command: npm install --prefix /home/{{ ansible_user }}/.local wscat
      when: node_check.rc == 0

    - name: Test connection to mesh-ingress-0
      shell: |
        echo "Running: {{ wscat_command }}"
        {{ wscat_command }}
      register: result_mesh_0
      changed_when: false
      failed_when: false
      loop:
        - "{{ mesh_ingress_0_url }}"

    - name: Debug the command executed and its output (stdout and stderr)
      debug:
        msg: |
          Command executed: "{{ wscat_command }}"
          stdout: "{{ result_mesh_0.stdout }}"
          stderr: "{{ result_mesh_0.stderr }}"
          rc: "{{ result_mesh_0.rc }}"

    - name: Assert successful connection to mesh-ingress-0
      assert:
        that:
          - "'NodeID' in result_mesh_0.results[0].stdout"
          - "'mesh-ingress-0' in result_mesh_0.results[0].stdout"

    - name: Test connection to mesh-ingress-1
      shell: |
        echo "Running: {{ wscat_command }}"
        {{ wscat_command }}
      register: result_mesh_1
      changed_when: false
      failed_when: false
      loop:
        - "{{ mesh_ingress_1_url }}"

    - name: Assert successful connection to mesh-ingress-1
      assert:
        that:
          - "'NodeID' in result_mesh_1.results[0].stdout"
          - "'mesh-ingress-1' in result_mesh_1.results[0].stdout"
